apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: crimsy/sb-backend
          imagePullPolicy: Always
          env:
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-api-key
                  key: api-key
            - name: salt
              valueFrom:
                secretKeyRef:
                  name: backend-salzig
                  key: salt
          volumeMounts:
            - name: app-data
              mountPath: "/etc/appData"
              readOnly: true
      imagePullSecrets:
        - name: docker-hub-crimsy
      volumes:
        - name: app-data
          secret:
            secretName: app-data
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: production
  labels:
    app: backend
spec:
  type: ClusterIP
  ports:
    - port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    app: backend
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: backend
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  labels:
    app: backend

spec:
  tls:
    - hosts:
        - api.darfichraus.de
      secretName: api-darfichraus-de-tls
  rules:
    - host: api.darfichraus.de
      http:
        paths:
          - path: /
            backend:
              serviceName: backend
              servicePort: 8082
