openapi: "3.0.0"
info:
  version: "1"
  title: darfichraus.de API
servers:
  - url: https://api.crimsy.tech
    description: new production instance
  - url: https://api.dev.crimsy.tech
    description: old production instance
security:
  - ApiKeyAuth: []
paths:
  /restrictions:
    get:
      operationId: getAllValidRestrictions
      summary: Get all published restrictions possibly filtered by a RestrictionType
      parameters:
        - in: query
          name: type
          schema:
            $ref: '#/components/schemas/RestrictionType'
          required: false
          example: 'PUBLIC_TRANSPORTATION'
      responses:
        '200':
          description: List of all restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restrictions'
    post:
      operationId: addRestriction
      summary: adds a restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restriction'
      responses:
        '200':
          description: successfully added Restriction
  /restrictions/{areal}/{arealIdentifier}:
    get:
      operationId: getRestrictionsByArealAndArealIdentifier
      summary: Get restrictions for specific areal and arealIdentifier possibly filtered by a RestrictionState
      parameters:
        - in: path
          name: areal
          schema:
            $ref: '#/components/schemas/Areal'
          required: true
          example: 'STATE'
        - in: path
          name: arealIdentifier
          schema:
            type: string
          required: true
          example: 'Bayern'
        - in: query
          name: state
          schema:
            $ref: '#/components/schemas/RestrictionState'
          required: false
          example: 'PUBLIC_TRANSPORTATION'
      responses:
        '200':
          description: Restrictions for given areal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restrictions'
  /additionalInformation/{category}:
    get:
      operationId: getAdditionalInformationForCategory
      parameters:
        - in: path
          name: category
          schema:
            type: string
          required: true
          example: 'Bayern'
      responses:
        '200':
          description: additional information for given category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalInformationCategory'
    put:
      operationId: addAdditionalInformationToCategory
      parameters:
        - in: path
          name: category
          schema:
            type: string
          required: true
          example: 'Bayern'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformation'
      responses:
        '200':
          description: successfully added additional information
  /additionalInformation:
    get:
      operationId: getAdditionalInformation
      responses:
        '200':
          description: all additional information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalInformationCategories'
  /admin/restrictions:
    delete:
      operationId: deleteRestriction
      summary: deletes a restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restriction'
      responses:
        '200':
          description: successfully deleted Restriction
    get:
      operationId: getAllRestrictions
      summary: Get all published restrictions
      responses:
        '200':
          description: List of all restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restrictions'
    put:
      operationId: updateRestriction
      summary: updates a restriction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restriction'
      responses:
        '200':
          description: successfully updated Restriction
  /subscriptions:
    post:
      operationId: addSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          description: successfully added additional information
    get:
      operationId: getAllSubscriptions
      summary: Get all subscriptions
      responses:
        '200':
          description: List of all restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
    delete:
      operationId: deleteSubscription
      summary: deletes a Subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          description: successfully deleted Subscription

  /subscriptions/{areal}/{arealIdentifier}:
    get:
      operationId: getSubscriptionsByArealAndArealIdentifier
      summary: Get subscriptions for specific areal and arealIdentifier
      parameters:
        - in: path
          name: areal
          schema:
            $ref: '#/components/schemas/Areal'
          required: true
          example: 'STATE'
        - in: path
          name: arealIdentifier
          schema:
            type: string
          required: true
          example: 'Bayern'
      responses:
        '200':
          description: Subscriptions for given areal and arealIdentifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'



components:
  schemas:
    Restriction:
      type: object
      required:
        - areal
        - arealIdentifier
        - restrictionState
        - restrictionType
        - restrictionStart
        - restrictionEnd
        - recipient
        - publisher
        - restrictionDescription
        - shortDescription
      properties:
        id:
          type: string
        areal:
          $ref: '#/components/schemas/Areal'
        arealIdentifier:
          type: string
        restrictionType:
          $ref: '#/components/schemas/RestrictionType'
        restrictionState:
          $ref: '#/components/schemas/RestrictionState'
        shortDescription:
          type: string
          description: 'Give a short excerpt, why the restriction is active'
          example: 'There are zombies everywhere'
        restrictionDescription:
          type: string
          description: 'Full styled text to give a closer look to the restriction.'
        restrictionStart:
          type: string
          format: date
          description: 'Start of restriction'
          example: '2020-03-21'
        restrictionEnd:
          type: string
          format: date
          description: 'End of restriction'
          example: '2020-03-21'
        recipient:
          type: string
          description: 'affected group of citizens'
          example: 'Sch√ºler'
        publisher:
          type: string
          description: 'source of information'
          example: 'Regierung'
        furtherInformation:
          type: string
          description: 'Further information for snoopy people'
          example: 'http://link/to/more/information'
        verified:
          type: boolean
          description: 'whether this restriction has been verified yet'
          default: false
        created:
          type: string
          format: date
          description: 'when this restriction has been created'
        modified:
          type: string
          format: date
          description: 'when this restriction has been updated'

    Restrictions:
      type: array
      items:
        $ref: '#/components/schemas/Restriction'

    Areal:
      description: 'A restriction can be city-based (zip), county based (Landkreis), for the whole state (Bayern) or countrywide (country)'
      type: string
      enum:
        - ZIP
        - COUNTY
        - STATE
        - COUNTRY

    RestrictionType:
      description: 'A restriction can affect one of these  areas of public life'
      type: string
      enum:
        - PUBLIC_TRANSPORTATION
        - EVENTS_AND_ASSEMBLIES
        - GASTRONOMY
        - PUBLIC_PLACES
        - RETAIL
        - CURFEW

    RestrictionState:
      description: 'Describes severeness of restriction'
      type: string
      enum:
        - BAN
        - RESTRICTION
    AdditionalInformationCategories:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalInformationCategory'

    AdditionalInformationCategory:
      type: object
      required:
        - category
        - additionalInformation
      properties:
        additionalInformation:
          $ref: '#/components/schemas/AdditionalInformation'
        category:
          type: string
        id:
          type: string

    AdditionalInformation:
      type: object
      additionalProperties:
        type: string

    Subscriptions:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'

    Subscription:
      type: object
      required:
        - email
        - areal
        - arealIdentifier
        - contactAllowed
      properties:
        id:
          type: string
        email:
          type: string
          example: 'a@b.com'
        areal:
          $ref: '#/components/schemas/Areal'
        arealIdentifier:
          type: string
        types:
          type: array
          items:
            $ref: '#/components/schemas/RestrictionType'
        created:
          type: string
          format: date
          description: 'when this subscription has been created'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: 'API-KEY'
      description: 'Api-Key needed to authenticate requests'

